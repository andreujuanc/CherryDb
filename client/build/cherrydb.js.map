{"version":3,"file":"cherrydb.js","sources":["../src/sync/index.ts","../src/data/stores/MemoryStore.ts","../src/data/Record.ts","../src/endpoint/Remote.ts","../src/endpoint/FetchRequest.ts","../src/main.ts"],"sourcesContent":["import IStore from \"../data/IStore\";\r\nimport Remote from \"../endpoint/Remote\";\r\nimport { EventEmitter } from \"events\";\r\n\r\nexport default class Sync {\r\n    private _data: IStore;\r\n    private _remote: Remote;\r\n    public OnSyncCompleted: Function;\r\n\r\n    constructor(data: IStore, remote: Remote) {\r\n        this._data = data;\r\n        this._remote = remote;\r\n    }\r\n\r\n    async Pull() {\r\n        try {\r\n            const TS = this._data.GetLastRecordTimeStamp();\r\n            //console.log('Last record', lastRecord)\r\n            const remoteData = await this._remote.getNewRecordsFrom(TS);\r\n            this._data.Upsert(remoteData);\r\n            if (this.OnSyncCompleted) this.OnSyncCompleted();\r\n\r\n            return 1;\r\n        }\r\n        catch (ex) {\r\n            throw ex;\r\n        }\r\n    }\r\n\r\n    async Push(){\r\n        try{\r\n            let pushData = await this._data.GetPushData();\r\n            let pushResult = await this._remote.Send(pushData);\r\n            await this._data.ClearPushData(pushResult);\r\n        }\r\n        catch (ex) {\r\n            throw ex;\r\n        }\r\n    }\r\n\r\n    async PollSync() {\r\n        await this.Push();\r\n        await this.Pull();\r\n        setTimeout(()=>this.PollSync(), 2000);\r\n    }\r\n}","import IRecord from \"../IRecord\";\r\nimport IStore from \"../IStore\";\r\n\r\nexport default class Store  implements IStore{\r\n    uuidv4() {\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n            var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n            return v.toString(16);\r\n        });\r\n    }\r\n\r\n    private _data: IRecord[];\r\n    private _push: IRecord[];\r\n\r\n    constructor() {\r\n        this._data = [];\r\n        this._push = [];\r\n    }\r\n\r\n    GetLastRecord(): IRecord {        \r\n        const filtered = this._data.filter(x => x.timestamp);\r\n        if (filtered.length === 0) return null;\r\n        if (filtered.length === 1) return this._data[0];\r\n        return filtered.reduce((a, b) => a.timestamp && b.timestamp && a.timestamp > b.timestamp ? a : b);\r\n    }\r\n    GetLastRecordTimeStamp(): number {\r\n        const lastRecord = this.GetLastRecord();\r\n        if (lastRecord == null)\r\n            return 0;\r\n        return lastRecord.timestamp;\r\n    }\r\n\r\n    GetRecordById(id: string): IRecord {\r\n        if (id == null) return null; //TODO: throw?\r\n        return this._data.find(x => x.id == id);\r\n    }\r\n\r\n    private upsert(record: IRecord): IRecord {\r\n        if (record.id == null) {\r\n            record.id = this.uuidv4();\r\n            this._push.push(record);\r\n        }\r\n        const index = this._data.findIndex(x => x.id == record.id);\r\n        if (index >= 0) {\r\n            this._data[index] = record;\r\n        }\r\n        else {\r\n            this._data.push(record);\r\n        }\r\n        return record;\r\n    }\r\n\r\n    Upsert(records: IRecord | IRecord[]): IRecord[] | IRecord {\r\n        if (records == null) return null; //TODO: throw?\r\n        const isArray = Array.isArray(records);//DAMN TS COMPILER.\r\n        if (!Array.isArray(records)) { records = [records] };\r\n\r\n        for (let i = 0; i < records.length; i++) {\r\n            records[i] = this.upsert(records[i]);\r\n        }\r\n        if (isArray)\r\n            return records;\r\n        else\r\n            return records[0];\r\n    }\r\n\r\n    Count(): number {\r\n        return this._data.length;\r\n    }\r\n\r\n    GetAllRecords(): IRecord[] {\r\n        return this._data;\r\n    }\r\n\r\n    async ClearPushData(records: IRecord | IRecord[]) {\r\n        if (records == null) return;\r\n        if (!Array.isArray(records))\r\n            records = [records];\r\n        for (var i = 0; i < records.length; i++) {\r\n            let index = records.findIndex(x => x.id == records[i].id)\r\n            this._push.slice(index, 1);\r\n        }\r\n    }\r\n\r\n    async GetPushData(): Promise<IRecord | IRecord[]> {\r\n        return new Promise<IRecord[]>(x => x(this._push));\r\n    }\r\n}","import IRecord from './IRecord';\r\n\r\nexport default  class Record implements IRecord {\r\n    id: string;    \r\n    timestamp: number;\r\n}","import IRecord from \"../data/IRecord\";\r\nimport Record from \"../data/Record\";\r\nimport IRequest from \"./IRequest\";\r\n//import { Promise } from \"es6-promise\";\r\n\r\nconst mapToRecord = (item) => Object.assign(new Record(), item);\r\n\r\nexport default class Remote {\r\n\r\n    private _endpoint: string;\r\n    private _request: IRequest;\r\n    private _path: string = '/cherrydb';\r\n\r\n    constructor(endpoint: string, request: IRequest) {\r\n        this._endpoint = endpoint;\r\n        this._request = request;\r\n    }\r\n\r\n    async getNewRecordsFrom(timestamp: number): Promise<Record[]> {\r\n        let response = await this._request.fetch(`${this._endpoint}${this._path}/from/${timestamp}`, {\r\n           // mode:'no-cors'\r\n        });\r\n        if (!response.ok)\r\n            return [];\r\n        let items = await response.json();\r\n        if (Array.isArray(items))\r\n            items.map(mapToRecord);\r\n        return items;\r\n    }\r\n\r\n    async Send(record: IRecord | IRecord[]): Promise<IRecord | IRecord[]> {\r\n        //console.log('posting to ', `${this._endpoint}${this._path}`)\r\n        if(record == null) return Promise.resolve([]);\r\n        const data = JSON.stringify(record);\r\n        var isArray = Array.isArray(record);\r\n        if(Array.isArray(record) && record.length == 0 ) return Promise.resolve([]);\r\n\r\n        //console.log('data', data)\r\n        /**\r\n         * Must do something like this to make it sexier!\r\n         * https://youtu.be/fRgFVNhSJEc?t=55m43s\r\n         */\r\n        return this._request.fetch(`${this._endpoint}${this._path}`, {\r\n            method: 'POST',\r\n            mode:'cors',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: data\r\n        })\r\n            .then((response) => {\r\n                //console.log('response', response.ok)\r\n                if (response.ok)\r\n                    return response.json();\r\n                return [];\r\n            })\r\n            .then(x => isArray ? x.map(mapToRecord) : mapToRecord(x))\r\n            .then(x => {\r\n                //console.log(x);\r\n                return x;\r\n            });\r\n    }\r\n}","import IRequest from \"./IRequest\";\r\n\r\nexport default class FetchRequest implements IRequest{\r\n    fetch(url:string, request:any): Promise<any> {\r\n        console.log('REAL SHIT')\r\n        return fetch.apply(window, arguments);\r\n    }\r\n\r\n}","import Sync from \"./sync/index\";\r\nimport Store from \"./data/stores/MemoryStore\";\r\nimport IStore from \"./data/IStore\";\r\nimport Remote from \"./endpoint/Remote\";\r\nimport FetchRequest from \"./endpoint/FetchRequest\";\r\nimport IRecord from \"./data/IRecord\";\r\nimport { resolve } from \"dns\";\r\n\r\nexport default class CheeryDb {\r\n    private _sync: Sync;\r\n    private _store: IStore;\r\n    private _remote: Remote;\r\n    private _fetchRequest: FetchRequest;\r\n    private _started: boolean = false;\r\n    private _onChangeCallbacks : Function[] = [];\r\n\r\n    constructor(endpoint: string) {\r\n        if (endpoint == null) throw new Error('First argument \"endpoint\" is mandatory');\r\n        if (typeof endpoint != 'string') throw new Error('First argument \"endpoint\" must be a valid url');\r\n        if (endpoint.length < 3) throw new Error('First argument \"endpoint\" must be a valid url');\r\n\r\n        this._store = new Store();\r\n        this._fetchRequest = new FetchRequest();\r\n        this._remote = new Remote(endpoint, this._fetchRequest);\r\n        this._sync = new Sync(this._store, this._remote);\r\n    }\r\n\r\n    Start(onchangeCallback: Function) {\r\n        if (this._started) return;\r\n        this._started = true;\r\n        this._sync.OnSyncCompleted  =  onchangeCallback;\r\n\r\n        var syncResult = this._sync.PollSync();\r\n        return true;\r\n    }\r\n\r\n    getStore() {\r\n        return this._store;\r\n    }\r\n\r\n    async Upsert(record: IRecord|IRecord[]) : Promise<IRecord | IRecord[]> {\r\n        return await this._store.Upsert(record);\r\n    }\r\n}"],"names":[],"mappings":"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"}